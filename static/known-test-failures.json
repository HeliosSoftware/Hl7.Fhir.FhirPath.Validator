{
  "description": "Known test failures for FHIR R5 FhirPath Validator",
  "version": "1.0.0",
  "knownFailures": [
    {
      "groupName": "TerminologyTests", 
      "testName": "txTest03",
      "reason": "ConceptMap cm-address-use-v2 not available on test server"
    },
    {
      "groupName": "Precision",
      "testName": "PrecisionDecimal",
      "reason": "Decimal trailing zeros not preserved (known limitation)"
    },
    {
      "groupName": "testConformsTo",
      "testName": "*", 
      "reason": "conformsTo not yet implemented"
    },
    {
      "groupName": "miscEngineTests",
      "testName": "testContainedId",
      "reason": "Multiple matches error - collection handling issue in resolve function"
    },
    {
      "groupName": "miscEngineTests",
      "testName": "testMultipleResolve",
      "reason": "Multiple matches error - collection handling issue in resolve function"
    },
    {
      "groupName": "polymorphics",
      "testName": "testPolymorphicsB",
      "reason": "Test data issue?"
    },
    {
      "groupName": "testDollar",
      "testName": "testDollarOrderNotAllowed",
      "reason": "Test data issue?"
    },
    {
      "groupName": "testIif",
      "testName": "testIif6",
      "reason": "Still working on this one - needs spec definition"
    },
    {
      "groupName": "testLiterals",
      "testName": "testDateTimeGreaterThanDate2",
      "reason": "now() > today() - Everyone thinks this is empty but us.  This is a DateTime compared to a Date, but there are other tests that allow these comparisons: now() > Patient.birthDate - expects true - https://chat.fhir.org/#narrow/channel/179266-fhirpath/topic/now.28.29.20.3E.20today.28.29/with/538680992"
    },
    {
      "groupName": "testInheritance",
      "testName": "testFHIRPathAsFunction11",
      "reason": "Contested"
    },
    {
      "groupName": "testInheritance",
      "testName": "testFHIRPathAsFunction16",
      "reason": "Contested"
    },
    {
      "groupName": "testTypes",
      "testName": "testStringQuantityMonthLiteralToQuantity",
      "reason": "Test is wrong"
    },
    {
      "groupName": "testTypes",
      "testName": "testStringQuantityYearLiteralToQuantity",
      "reason": "Test is wrong"
    }
  ]
}